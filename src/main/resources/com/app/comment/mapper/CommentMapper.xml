<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.comment.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.app.comment.entity.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
  </resultMap>

    <resultMap id="CommentsResultMap" type="com.app.comment.entity.CommentVo" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP" />
        <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
        <result column="name" property="goodsName" jdbcType="VARCHAR" />
    </resultMap>


  <sql id="Base_Column_List" >
    id,created_dt,created_by,content,goods_id
  </sql>


  <insert id="insert" parameterType="com.app.comment.entity.Comment" >
    insert into comment (created_dt,created_by,
      content,goods_id)
    values (#{createdDt,jdbcType=TIMESTAMP},#{createdBy,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR},#{goodsId,jdbcType=BIGINT})
  </insert>

  <update id="update" parameterType="com.app.comment.entity.Comment" >
    update comment
      <set>
          <if test="id != null" >
              id = #{id,jdbcType=BIGINT},
          </if>
          <if test="createdDt != null" >
              created_dt = #{createdDt,jdbcType=TIMESTAMP},
          </if>
          <if test="createdBy != null" >
              created_by = #{createdBy,jdbcType=VARCHAR},
          </if>
          <if test="content != null" >
              content = #{content,jdbcType=VARCHAR},
          </if>
          <if test="goodsId != null" >
              goods_id = #{goodsId,jdbcType=BIGINT},
          </if>
      </set>
  		where id = #{id,jdbcType=BIGINT}
  </update>

  <delete id="delete" parameterType="com.app.comment.entity.Comment" >
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <select id="find" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select
		<include refid="Base_Column_List" />
	from comment
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		      <if test="id != null" >
		        and id = #{id,jdbcType=BIGINT}
		      </if>
		      <if test="createdDt != null" >
		        and created_dt = #{createdDt,jdbcType=TIMESTAMP}
		      </if>
		      <if test="createdBy != null" >
		        and created_by = #{createdBy,jdbcType=VARCHAR}
		      </if>
		      <if test="content != null" >
		        and content = #{content,jdbcType=VARCHAR}
		      </if>
		      <if test="goodsId != null" >
		        and goods_id = #{goodsId,jdbcType=BIGINT}
		      </if>
	      </trim>
	order by id desc
  </select>
    <select id="findCounts" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(0)
        from comment
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="id != null" >
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="createdDt != null" >
                and created_dt = #{createdDt,jdbcType=TIMESTAMP}
            </if>
            <if test="createdBy != null" >
                and created_by = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="content != null" >
                and content = #{content,jdbcType=VARCHAR}
            </if>
            <if test="goodsId != null" >
                and goods_id = #{goodsId,jdbcType=BIGINT}
            </if>
        </trim>
    </select>

    <select id="findComments" parameterType="java.util.Map" resultMap="CommentsResultMap">
        select
        a.*, b.name
        from comment a, goods b
        where a.goods_id = b.id
            <if test="id != null" >
                and a.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="createdDt != null" >
                and a.created_dt = #{createdDt,jdbcType=TIMESTAMP}
            </if>
            <if test="createdBy != null" >
                and a.created_by = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="content != null" >
                and a.content = #{content,jdbcType=VARCHAR}
            </if>
            <if test="goodsId != null" >
                and a.goods_id = #{goodsId,jdbcType=BIGINT}
            </if>
            <if test="goodsName != null" >
                and (a.content like '%${goodsName}%' or b.name like '%${goodsName}%')
            </if>
        order by a.id desc
    </select>

    <select id="findCommentsCounts" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(0)
        from comment a, goods b
        where a.goods_id = b.id
        <if test="id != null" >
            and a.id = #{id,jdbcType=BIGINT}
        </if>
        <if test="createdDt != null" >
            and a.created_dt = #{createdDt,jdbcType=TIMESTAMP}
        </if>
        <if test="createdBy != null" >
            and a.created_by = #{createdBy,jdbcType=VARCHAR}
        </if>
        <if test="content != null" >
            and a.content = #{content,jdbcType=VARCHAR}
        </if>
        <if test="goodsId != null" >
            and a.goods_id = #{goodsId,jdbcType=BIGINT}
        </if>
        <if test="goodsName != null" >
            and (a.content like '%${goodsName}%' or b.name like '%${goodsName}%')
        </if>
    </select>
</mapper>
